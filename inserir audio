# Exemplo do GPT para colocar audio no codigo


from pydub import AudioSegment
import numpy as np
import matplotlib.pyplot as plt

# Supondo que você tenha um sinal ECG como 'ecg_signal'
# Substitua 'ecg_signal' pelos seus próprios dados ECG

# Converter sinal ECG para áudio
def ecg_to_audio(ecg_signal, duration=10, sampling_rate=1000, volume=0.5):
    # Normalizar o sinal ECG para o intervalo de -1 a 1
    normalized_ecg = (ecg_signal - np.min(ecg_signal)) / (np.max(ecg_signal) - np.min(ecg_signal))
    
    # Mapear os valores normalizados para uma faixa de frequências desejada
    frequencies = 220 + normalized_ecg * 440  # Mapeando para frequências de 220 Hz a 660 Hz
    
    # Criar um sinal de áudio usando as frequências mapeadas
    audio_signal = np.int16(volume * 32767 * np.sin(2 * np.pi * frequencies * np.arange(0, duration, 1/sampling_rate)))

    return AudioSegment(audio_signal.tobytes(), frame_rate=sampling_rate, sample_width=2, channels=1)

# Exemplo: Gerar áudio a partir de um sinal ECG de exemplo
t = np.arange(0, 10, 1/1000)
ecg_signal = 0.5 * np.sin(2 * np.pi * 0.5 * t) + 0.2 * np.sin(2 * np.pi * 2.5 * t)

audio = ecg_to_audio(ecg_signal)

# Salvar áudio em um arquivo
audio.export("ecg_audio.wav", format="wav")

# Visualizar o sinal ECG e reproduzir o áudio
plt.plot(t, ecg_signal)
plt.title('ECG Signal and Audio')
plt.xlabel('Time (s)')
plt.ylabel('Amplitude')
plt.show()

audio.play()

